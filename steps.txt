1.Iniciando

    - Iniciar proyecto de next:
        npx create-next-app
        Nombre proyecto: ecommerccetecnologicos
    
    - Instalacion de dependencias
        Ir al repositorio https://github.com/adrianhajdin/ecommerce_sanity_stripe
        Copiar las dependencias que hagan falta (package.json)
        Instalar: npm install --legacy-peer-deps
    
    - Lanzar servidor
        npm run dev

2. Configurar sanity

    Instalar globalmente: npm install -g @sanity/cli

    Logearse: sanity init --coupon javascriptmastery2022

    Ver en los recursos las otras configuraciones hechas por terminal

    En .gitignore:
        En dependencies: 
            Quitar el / de /.nodemodules
            Poner .env
    
    Ver schemas:
        Entrar a la carpeta de sanity (ecommercetech)
        Comando: sanity start

3. Hacer schemas (eccomercetech/schemas)

    - Schemas
        Products
            . Slug: Identificador únioco de cada producto
        Banner
    - Incluir schemas en el array en eccomercetech/schemas/schema.js
    - Ir a localhost:3333/desk y comprabar la creacion de los schemas
    - Crear un producto
        Recursos -> https://www.youtube.com/redirect?event=video_description&redir_token=QUFFLUhqbjNJeDJ5ZThnZWk4d3R1OWJnNFduX2t2cGhDd3xBQ3Jtc0tuUlpFeDlETmRZaTZRRUhMbmdVam9xa1JUelBoU1JKSDVVMmRRaXhfeDJUc1F6M3I2b1ZqeG5Sa2d0SDEzNmZ2V18wQ3dqUEl0M2NKdHd1Z0s5S29BLU1YVktmRkExaFBiYmU0Ql9ob3p5U3BsV0lhYw&q=https%3A%2F%2Fminhaskamal.github.io%2FDownGit%2F%23%2Fhome%3Furl%3Dhttps%3A%2F%2Fgithub.com%2Fadrianhajdin%2Fecommerce_sanity_stripe%2Ftree%2Fmain%2Fpublic%2Fassets&v=4mOkFXyxfsU

4. Primeros pasos en la página principal(pages/index.js)

    - Borrar todo lo que hay en pages/index.js
    - Escribir rafce (shorcut que importa react y además crea el componente index)
      Asegurarse que se tiene el plugin necesario para usar este shorcut(es7 snippets)
    - Crear aarchivo .babelrc
    - Hacer un array en .eslintrc.json
    - Hacer una plantilla inicial del Home en pages/index.js

5. Agregar estilos a la plantilla inicial del home
    - Ir a styles:
        Eliminar Home.module.css
        Ir al repositorio de github y copiar los estilos glabals.css
    
    - Asegurarse que en pages/_app.js este la importacion de los estilos globales
    - Poner algunas classNames a los div en nuestra plantilla inicial del Home en pages/index.js

6. Crear plantillas de componentes

    - Hacer carpeta components:
         Incluir todos los componentes
         Archivo index.js que sirve para las exportaciones

    - Incluir el preset @babel/preset-react en .babelrc y quitar "next/babel"
    - Importar react en _app.js
    - Importar e incluir los componentes HeroBanner y FooterBanner

7. HeroBanner y coneccion a sanity

    Coneccion a sanity:
    
        - Ir a https://www.sanity.io/manage/personal/project/ek8u5wxy
            Copiar ProjectID
            Crear un token (name: desarrollogreat) y copiarlo
        
        - Guardar token en archivo .env

        - Crear archivo lib/client.js
            Pegar PojectID y llamar el token 
        
        - En pages/index.js:
            Importar client de lib/client
            Hacer función getServerSideProps

    HeroBanner

        Ir a http://localhost:3333/desk/banner;f02d6008-947e-47c7-9233-2a9c8ed75e11%2Ctemplate%3Dbanner
            Crear un producto en banner

        Acceder al producto creado desde la app
            Hacer un console.log() en pages/index.js
        
        Componente HeroBanner:
            Mostrar la informacion del producto almacenado en sanity

8.Componente Product

    Mostrar primera imagen,nombre y precio toda esta informacion esta envuelta en una etiqueta Link
    la cual direcciona al detalle de cada producto por medio del slug.current

    Crear más productos en sanity http://localhost:3333/desk/product;6a9d3cd8-5a28-4d9f-96ea-6732583aa45d%2Ctemplate%3Dproduct




        


